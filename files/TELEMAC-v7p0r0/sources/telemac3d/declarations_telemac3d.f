!                    *****************************
                     MODULE DECLARATIONS_TELEMAC3D
!                    *****************************
!
!
!***********************************************************************
! TELEMAC3D   V6P2                                   21/08/2010
!***********************************************************************
!
!brief    DECLARATION OF PRINCIPAL TELEMAC3D VARIABLES
!
!history  J-M HERVOUET (LNH)
!+
!+
!+   LINKED TO BIEF 5.0
!
!history  N.DURAND (HRW), S.E.BOURBAN (HRW)
!+        13/07/2010
!+        V6P0
!+   Translation of French comments within the FORTRAN sources into
!+   English comments
!
!history  N.DURAND (HRW), S.E.BOURBAN (HRW)
!+        21/08/2010
!+        V6P0
!+   Creation of DOXYGEN tags for automated documentation and
!+   cross-referencing of the FORTRAN sources
!
!history  G. ANTOINE (EDF LAB, LNHE)
!+        19/09/2014
!+        V7P0
!+   Adding variables for mixed sediment
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
      USE BIEF_DEF
!
!       NOTE: THIS MODULE IS ORGANISED IN 10 PARTS
!
!       (1) VECTORS (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!       (2) MATRICES (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!       (3) BLOCKS (WILL BE DECLARED AS BIEF_OBJ STRUCTURES)
!       (4) INTEGERS
!       (5) LOGICAL VALUES
!       (6) REALS
!       (7) STRINGS
!       (8) SLVCFG STRUCTURES
!       (9) MESH STRUCTURE
!      (10) ALIASES
!
!-----------------------------------------------------------------------
! (1) VECTORS (REAL AND INTEGER)
!-----------------------------------------------------------------------
!
!
!     3D VELOCITY COMPONENTS AT PREVIOUS TIMESTEP (TIME N)
!
      TYPE(BIEF_OBJ), TARGET :: UN,VN,WN
!
!     3D VELOCITY COMPONENTS AFTER ADVECTION
!
      TYPE(BIEF_OBJ), TARGET :: UC,VC,WC
!
!     3D VELOCITY COMPONENTS AFTER DIFFUSION
!
      TYPE(BIEF_OBJ), TARGET :: UD,VD,WD
!
!     3D VELOCITY COMPONENTS AT CURRENT TIMESTEP (TIME N+1)
!
      TYPE(BIEF_OBJ), TARGET :: U,V,W
!
!     EXPLICIT SOURCE TERMS ON VELOCITIES
!
      TYPE(BIEF_OBJ), TARGET :: S0U,S0V,S0W
!
!     IMPLICIT SOURCE TERMS ON VELOCITIES U
!
      TYPE(BIEF_OBJ), TARGET :: S1U,S1V,S1W
! 
!     RIGHT-HAND SIDE ON VELOCITIES EQUATIONS
!
      TYPE(BIEF_OBJ), TARGET :: SMU,SMV
!
!     PRESCRIBED VELOCITY COMPONENTS ON THE BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: UBORF,VBORF,WBORF
!
!     PRESCRIBED VELOCITY COMPONENTS ON THE LATERAL BOUNDARY
!
      TYPE(BIEF_OBJ), TARGET :: UBORL,VBORL,WBORL
!
!     PRESCRIBED VELOCITY COMPONENTS AT THE FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: UBORS,VBORS,WBORS
!
!     ORIGINAL PRESCRIBED VALUES AT THE FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: TRBORSAVE,UBORSAVE,VBORSAVE
      TYPE(BIEF_OBJ), TARGET :: WBORSAVE,KBORSAVE,EBORSAVE
!
!     (FRICTION VELOCITY)**2 FOR BOTTOM AND LATERAL BOUNDARIES
!
      TYPE(BIEF_OBJ), TARGET :: UETCAR,UETCAL
!
!     LOGARITHMIC LAW FOR U-VELOCITY COMPONENT, ON THE BOTTOM: NU*DU/DN = AUBORF*U + BUBORF
!
      TYPE(BIEF_OBJ), TARGET :: AUBORF,BUBORF
!
!     LOGARITHMIC LAW FOR U-VELOCITY COMPONENT, ON THE LATERAL BOUNDARIES: NU*DU/DN = AUBORL*U + BUBORL
!
      TYPE(BIEF_OBJ), TARGET :: AUBORL,BUBORL
!
!     LOGARITHMIC LAW FOR U-VELOCITY COMPONENT, AT THE FREE SURFACE: NU*DU/DN = AUBORS*U + BUBORS
!
      TYPE(BIEF_OBJ), TARGET :: AUBORS,BUBORS
!
!     LOGARITHMIC LAW FOR V-VELOCITY COMPONENT, ON THE BOTTOM: NU*DV/DN = AVBORF*V + BVBORF
!
      TYPE(BIEF_OBJ), TARGET :: AVBORF,BVBORF
!
!     LOGARITHMIC LAW FOR V-VELOCITY COMPONENT, ON THE LATERAL BOUNDARIES: NU*DV/DN = AVBORL*V + BVBORL
!
      TYPE(BIEF_OBJ), TARGET :: AVBORL,BVBORL
!
!     LOGARITHMIC LAW FOR V-VELOCITY COMPONENT, AT THE FREE SURFACE: NU*DV/DN = AVBORS*V + BVBORS
!
      TYPE(BIEF_OBJ), TARGET :: AVBORS,BVBORS
!
!     LOGARITHMIC LAW FOR W-VELOCITY COMPONENT, ON THE BOTTOM: NU*DW/DN = AWBORF*W + BWBORF
!
      TYPE(BIEF_OBJ), TARGET :: AWBORF,BWBORF
!
!     LOGARITHMIC LAW FOR W-VELOCITY COMPONENT, ON THE LATERAL BOUNDARIES: NU*DW/DN = AWBORL*W + BWBORL
!
      TYPE(BIEF_OBJ), TARGET :: AWBORL,BWBORL
!
!     LOGARITHMIC LAW FOR W-VELOCITY COMPONENT, AT THE FREE SURFACE: NU*DW/DN = AWBORS*W + BWBORS
!
      TYPE(BIEF_OBJ), TARGET :: AWBORS,BWBORS
!
!     TYPES OF BOUNDARY CONDITIONS FOR VELOCITY COMPONENTS ON THE BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: LIUBOF,LIVBOF,LIWBOF
!
!     TYPES OF BOUNDARY CONDITIONS FOR U ON THE LATERAL BOUNDARIES
!
      TYPE(BIEF_OBJ), TARGET :: LIUBOL,LIVBOL,LIWBOL
      TYPE(BIEF_OBJ), TARGET :: LIUBOL_USER,LIVBOL_USER
!
!     TYPES OF BOUNDARY CONDITIONS FOR VELOCITY COMPONENTS AT THE FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: LIUBOS,LIVBOS,LIWBOS
!
!     'COLOUR' OF BOUNDARY NODES (TAKEN IN BOUNDARY CONDITIONS FILE)
!
      TYPE(BIEF_OBJ), TARGET :: BOUNDARY_COLOUR
!
!     PLANE NUMBER OF LAST PLANE WHICH HAS A CRUSHED LAYER ABOVE IT
!
      TYPE(BIEF_OBJ), TARGET :: IPBOT
!
!     SIGMA-TRANSFORMED VERTICAL VELOCITY COMPONENT
!
      TYPE(BIEF_OBJ), TARGET :: WS
!
!     DYNAMIC PRESSURE AT TIME N+1 AND TIME N (NON-HYDROSTATIC)
!
      TYPE(BIEF_OBJ), TARGET :: DP,DPN
!
!     HYDROSTATIC PRESSURE (NON-HYDROSTATIC)
!
      TYPE(BIEF_OBJ), TARGET :: PH
!
!     PRESCRIBED DYNAMIC PRESSURE ON BOTTOM, LATERAL BOUNDARIES AND FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: PBORF, PBORL, PBORS
!
!     TYPE OF BOUNDARY CONDITIONS FOR DYNAMIC PRESSURE
!
      TYPE(BIEF_OBJ), TARGET :: LIPBOF, LIPBOL, LIPBOS
!
!     K OF K-EPSILON MODEL AT PREVIOUS TIMESTEP (TIME N)
!
      TYPE(BIEF_OBJ), TARGET :: AKN
!
!     K OF K-EPSILON MODEL AFTER ADVECTION
!
      TYPE(BIEF_OBJ), TARGET :: AKC
!
!     K OF K-EPSILON MODEL AT TIME N+1
!
      TYPE(BIEF_OBJ), TARGET :: AK
!
!     EXPLICIT SOURCE TERMA FOR K IN K-EPSILON MODEL
!
      TYPE(BIEF_OBJ), TARGET :: S0AK
!
!     IMPLICIT SOURCE TERMA FOR K IN K-EPSILON MODEL
!
      TYPE(BIEF_OBJ), TARGET :: S1AK
!
!     PRESCRIBED K OF K-EPSILON MODEL ON: LATERAL BOUNDARY
!                                         FREE SURFACE
!                                         BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: KBORL,KBORS,KBORF
!
!     COEFFICIENTS OF LOGARITHMIC LAW FOR K OF K-EPSILON MODEL, ON THE BOTTOM
!                                                               FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: AKBORF,BKBORF,AKBORL
      TYPE(BIEF_OBJ), TARGET :: BKBORL,AKBORS,BKBORS
!
!     TYPES OF BOUNDARY CONDITIONS FOR K OF K-EPSILON MODEL ON THE BOTTOM
!                                                        LATERAL BOUNDARY
!                                                            FREE SURFACE
      TYPE(BIEF_OBJ), TARGET :: LIKBOF,LIKBOL,LIKBOS
!
!     EPSILON OF K-EPSILON MODEL AT PREVIOUS TIMESTEP (TIME N)
!
      TYPE(BIEF_OBJ), TARGET :: EPN
!
!     EPSILON OF K-EPSILON MODEL AFTER ADVECTION
!
      TYPE(BIEF_OBJ), TARGET :: EPC
!
!     EPSILON OF K-EPSILON MODEL AT TIME N+1
!
      TYPE(BIEF_OBJ), TARGET :: EP
!
!     EXPLICIT/IMPLICIT SOURCE TERM OF EPSILON IN K-EPSILON MODEL
!
      TYPE(BIEF_OBJ), TARGET :: S0EP,S1EP
!
!     PRESCRIBED EPSILON OF K-EPSILON MODEL ON THE BOTTOM
!                                        LATERAL BOUNDARY
!                                            FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: EBORF,EBORL,EBORS
!
!     COEFFICIENTS IN LOGARITHMIC LAW FOR EPSILON OF K-EPSILON MODEL, ON THE BOTTOM
!                                                                  LATERAL BOUNDARY
!                                                                      FREE SURFACE
      TYPE(BIEF_OBJ), TARGET :: AEBORF,AEBORL,AEBORS
      TYPE(BIEF_OBJ), TARGET :: BEBORF,BEBORL,BEBORS
!
!     TYPES OF BOUNDARY CONDITIONS FOR EPSILON OF K-EPSILON MODEL ON THE BOTTOM
!                                                              LATERAL BOUNDARY
!                                                                  FREE SURFACE
      TYPE(BIEF_OBJ), TARGET :: LIEBOF,LIEBOL,LIEBOS
!
!     VERTICALLY INTEGRATED VELOCITY COMPONENTS
!
      TYPE(BIEF_OBJ), TARGET :: U2D,V2D
!
!     VERTICALLY INTEGRATED VELOCITY COMPONENTS ON BOUNFDARIES
!    
      TYPE(BIEF_OBJ), TARGET :: UBOR2D,VBOR2D
!
!     VERTICALLY INTEGRATED VELOCITY COMPONENTS AT PREVIOUS TIME STEP
!
      TYPE(BIEF_OBJ), TARGET :: UN2D,VN2D
!
!     SOURCE TERMS ON VELOCITIES
!
      TYPE(BIEF_OBJ), TARGET :: FU,FV
!
!     WAVE STRESSES FROM ARTEMIS OR TOMAWAC
!
      TYPE(BIEF_OBJ), TARGET :: FXH,FYH
! 
!     FLUXES ON BOUNDARIES
!
      TYPE(BIEF_OBJ), TARGET :: FLBOR,FLBLIM
!
!     ADVECTION FIELD
!
      TYPE(BIEF_OBJ), TARGET :: UCONV,VCONV,WCONV
!
!     VERTICAL VELOCITY IN TRANSFORMED MESH
!
      TYPE(BIEF_OBJ), TARGET :: WSCONV
!
!     ADVECTION FIELD FOR CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: UCONVC,VCONVC
!
!     PSEUDO-VISCOSITY IN WAVE EQUATION
!
      TYPE(BIEF_OBJ), TARGET :: NUWAVE
!
!     PIECE-WISE LINEAR FUNCTION, AND ITS GRADIENT
!     USED WITH "COMPATIBILITY OF FREE SURFACE GRADIENT"
!
      TYPE(BIEF_OBJ), TARGET :: ZCONV,GRAZCO
!
!     D**-1 IN WAVE EQUATION (SEE BOOK)
!
      TYPE(BIEF_OBJ), TARGET :: DM1
!
!     EDGE BY EDGE FLUXES (AND ASSEMBLED IN PARALLEL VERSION)
!
      TYPE(BIEF_OBJ), TARGET :: FLODEL,FLOPAR
!
!     LIMITATION OF FLUXES
!
      TYPE(BIEF_OBJ), TARGET :: FLULIM
!
!     VOLUME AROUND POINTS AT TIME N+1, NOT ASSEMBLED (VOLU)
!                                       ASSEMBLED IN PARALLEL (VOLUPAR)
!
      TYPE(BIEF_OBJ), TARGET :: VOLU,VOLUPAR
!
!     VOLUME AROUND POINTS AT TIME N
!
      TYPE(BIEF_OBJ), TARGET :: VOLUN,VOLUNPAR
!
!     VARIOUS VOLUMES (AT AN INTERMEDIATE TIME STEP)
!
      TYPE(BIEF_OBJ), TARGET :: VOLUT,VOLU3D,VOLU3DPAR
!
!     INTEGRAL OF 2D BASES (SCALAR AND ASSEMBLED IN PARALLEL)
!
      TYPE(BIEF_OBJ), TARGET :: VOLU2D,V2DPAR
!
!     INVERSE OF INTEGRAL OF BASES IN 2D, IN 3D
!
      TYPE(BIEF_OBJ), TARGET :: UNSV2D,UNSV3D
!  
!     INTERNAL FLUXES, PER NODE
!
      TYPE(BIEF_OBJ), TARGET :: FLUINT
! 
!     FLUX AT BOUNDARIES, AND ASSEMBLED FORM IN PARALLEL
!
      TYPE(BIEF_OBJ), TARGET :: FLUEXT,FLUEXTPAR
!
!     FLUXES INTEGRATED ALONG THE VERTICAL
!
      TYPE(BIEF_OBJ), TARGET :: FLINT2
!
!     ABSOLUTE VALUE OF THE VORTICITY
!
      TYPE(BIEF_OBJ), TARGET :: ROTAT
!
!     RELATIVE DENSITY = (RHO-RHO0)/RHO0
!
      TYPE(BIEF_OBJ), TARGET :: DELTAR
!
!     RICHARDSON NUMBER
!
      TYPE(BIEF_OBJ), TARGET :: RI
!
!     FRICTION COEFFICIENT ON THE BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: RUGOF
!
!     FRICTION COEFFICIENT ON THE LATERAL BOUNDARY
!
      TYPE(BIEF_OBJ), TARGET :: RUGOL
!
!     ADIMENSIONAL FRICTION COEFFICIENT
!
      TYPE(BIEF_OBJ), TARGET :: CF
!
!     WIND VELOCITY
!
      TYPE(BIEF_OBJ), TARGET :: WIND
!
!     ATMOSPHERIC PRESSURE
!
      TYPE(BIEF_OBJ), TARGET :: PATMOS
!
!     PARAMETERS FOR GLOBAL MASS AND FLUX BALANCES
!
      TYPE(BIEF_OBJ), TARGET :: MASINI,MASSE,MASSEN
!
!     FLUX (ACCROSS THE BOUNDARIES)
!
      TYPE(BIEF_OBJ), TARGET :: FLUX
!
!     CUMULATED FLUXES OF TRACERS SINCE BEGINNING OF COMPUTATION
!
      TYPE(BIEF_OBJ), TARGET :: FLUCUM
!
!     DEPTH AT TIME N+1, AT TIME TN
!
      TYPE(BIEF_OBJ), TARGET :: H,HN
!
!     PROPAGATION DEPTH, I.E. DEPTH INTO THE TERM DIV(HU)
!
      TYPE(BIEF_OBJ), TARGET :: HPROP
!
!     HIGH WATER MARK, HIGH WATER TIME
!
      TYPE(BIEF_OBJ), TARGET :: MAXZ,TMAXZ
!
!     VARIATION OF DEPTH : H(N+1)-H(N)
!
      TYPE(BIEF_OBJ), TARGET :: DH
!
!     RIGHT-HAND SIDE FOR WATER DEPTH
!
      TYPE(BIEF_OBJ), TARGET :: SMH
!
!     PRESCRIBED DEPTH ON LATERAL BOUNDARIES
!
      TYPE(BIEF_OBJ), TARGET :: HBOR
!
!     RAIN IN M/S MULTIPLIED BY VOLU2D, AND VERSION ASSEMBLED IN PARALLEL
!
      TYPE(BIEF_OBJ), TARGET :: PLUIE,PARAPLUIE
!
!     BLOCK OF VARIABLES TO BE ADVECTED BY CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: FN3D,FC3D
!
!     BLOCK OF VARIOUS BIEF_OBJ STRUCTURES FOR VARIABLES TO BE ADVECTED
!
      TYPE(BIEF_OBJ), TARGET :: BL_FN,BL_FC,BL_S0F,BL_FSC
      TYPE(BIEF_OBJ), TARGET :: BL_BOL,BL_BORL
!
!     VERTICAL COORDINATES FOR PROPAGATION STEP
!
      TYPE(BIEF_OBJ), TARGET :: ZPROP
!
!     BOTTOM ELEVATION
!
      TYPE(BIEF_OBJ), TARGET :: ZF
!
!     BOTTOM COORDINATES GIVEN PER ELEMENT
!
      TYPE(BIEF_OBJ), TARGET :: ZFE
!
!     PERCENTUAL MESH PLANES
!
      TYPE(BIEF_OBJ), TARGET :: ZSTAR
!
!     Z: DISTRIBUTION
!
      TYPE(BIEF_OBJ), TARGET :: ZT
!
!     DH/DT
!
      TYPE(BIEF_OBJ), TARGET :: DSSUDT
!
!     PRESCRIBED ELEVATIONS OF PLANES
!
      TYPE(BIEF_OBJ), TARGET :: ZPLANE
!
!     TYPE OF SIGMA TRANSFORMATION
!
      TYPE(BIEF_OBJ), TARGET :: TRANSF_PLANE
!
!     COORDINATES IN THE TRANSFORMED MESH FOR THE METHOD OF CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: ZCHAR
!
!     MASK OF ELEMENTS
!
      TYPE(BIEF_OBJ), TARGET :: MASKEL
!
!     MASK OF NODES
!
      TYPE(BIEF_OBJ), TARGET :: MASKPT
!
!     3D MASK OF BOUNDARY ELEMENTS (CASE WITH MASKING)
!
      TYPE(BIEF_OBJ), TARGET :: MASKBR
!
!     3D MASK OF BOUNDARY ELEMENTS (WORKING ARRAY FOR DEBIMP_3D)
!
      TYPE(BIEF_OBJ), TARGET :: MASKTR
!
!     POSITIONS OF FLOATING BODIES (X,Y, Z AND Z IN TRANSFORMED MESH)
!
      TYPE(BIEF_OBJ), TARGET :: XFLOT,YFLOT,ZFLOT
!
!     BARYCENTRIC COORDINATES OF FLOATING BODIES, AT THE FOOT OF CHARACTERISTICS
!     HORIZONTAL AND VERTICAL
!
      TYPE(BIEF_OBJ), TARGET :: SHPFLO,SHZFLO
!
!     TAGS FOR FLOATING BODIES
!
      TYPE(BIEF_OBJ), TARGET :: TAGFLO
!
!     STARTING ELEMENTS OF FLOATING BODIES FOR CHARACTERISTICS
!
      TYPE(BIEF_OBJ), TARGET :: ELTFLO
!
!     STARTING LEVEL OF FLOATING BODIES FOR CHARACTERISTICS
! 
      TYPE(BIEF_OBJ), TARGET :: ETAFLO
!
!     TYPE OF BOUNDARY CONDITIONS ON DEPTH (AND VALUE OF USER SAVED IF THOMPSON)
!
      TYPE(BIEF_OBJ), TARGET :: LIHBOR,LIHBOR_USER
!
!     LIQUID BOUNDARY NUMNER OF BOUNDARY POINTS, OF BOUNDARY ELEMENTS
!
      TYPE(BIEF_OBJ), TARGET :: NUMLIQ,NUMLIQ_ELM
!
!     PROPAGATION BC TYPES (TELEMAC2D'S PROPAG)
!
      TYPE(BIEF_OBJ), TARGET :: LIMPRO
!
!     RIGHT HAND SIDE FOR THE LINEAR EQUATIONS IN 3D
!
      TYPE(BIEF_OBJ), TARGET :: SEM3D
!
!     RIGHT HAND SIDE FOR THE LINEAR EQUATIONS IN 2D
!
      TYPE(BIEF_OBJ), TARGET :: SEM2D
!
!     ELEMENT-ORIENTED WORKING ARRAYS
!
      TYPE(BIEF_OBJ), TARGET :: TE1,TE2,TE3
!
!     PIECE-WISE LINEAR FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: ZFLATS
!
!     VOID VECTOR STRUCTURE
!
      TYPE(BIEF_OBJ), TARGET :: SVIDE
!
!     RIGHT HAND SIDE OF CONTINUITY EQUATION WHEN SOURCES
!
      TYPE(BIEF_OBJ), TARGET :: SOURCES
!
!     SETTLING VELOCITY
!
      TYPE(BIEF_OBJ), TARGET :: WCHU
!
!     THICKNESS OF SOLID FRACTION OF THE BED LAYER ( EPAI=DZ/(1+IVIDE), DZ BED LAYER THICKNESS )
!
!      TYPE(BIEF_OBJ), TARGET :: EPAI
!
!     VOID RATIO (GIBSON MODEL ONLY)
!
      TYPE(BIEF_OBJ), TARGET :: IVIDE
!
!     TIME COUNTER FOR CONSOLIDATION MODEL (MULTILAYER MODEL)
!
      TYPE(BIEF_OBJ), TARGET :: TEMP
!
!     CONCENTRATION OF MUD BED LAYER (MULTILAYER MODEL)
! 
!     TYPE(BIEF_OBJ), TARGET :: CONC
!
      DOUBLE PRECISION,DIMENSION(:,:), TARGET, ALLOCATABLE :: CONC
!
! TBE FLOCULATION AND HINDERED SETTLING MODEL 
!     HINDERED SETTLING SWITCH 
      LOGICAL HINDER 
!     HINDERED SETTLING METHOD 
      INTEGER HIND_TYPE
!
      DOUBLE PRECISION CGEL, CINI
!
!     FLOCULATION SWITCH 
      LOGICAL FLOC 
!     FLOCULATION METHOD 
      INTEGER FLOC_TYPE
! 
! BLOCK OF DATA FOR SETTLING AND DIFFUSION 1D PROFILE MODEL
      TYPE(BIEF_OBJ), TARGET :: TRAV1
! CV...        
! uniformisation avec SISYPHE
!
!     MAXIMUM NUMBER OF LAYERS ON THE MESH
!
      INTEGER, PARAMETER :: NLAYMAX = 20
!
!     BED SHEAR STRENGTH OF THE MUD BED LAYER (MULTILAYER MODEL)
!
!      TYPE(BIEF_OBJ), TARGET :: TOCE

      DOUBLE PRECISION,DIMENSION(:,:), TARGET, ALLOCATABLE :: TOCE
!
      TYPE(BIEF_OBJ), TARGET :: LAYTOCE
!
      DOUBLE PRECISION,DIMENSION(:,:), TARGET, ALLOCATABLE :: EPAI
!
      TYPE(BIEF_OBJ), TARGET :: LAYTHI
!    
!     MUD CONCENTRATION FOR EACH LAYER (Constante for initialisation)
!
      DOUBLE PRECISION :: CONC_LAYER(NLAYMAX)
!
!     CRITICAL SHEAR STRESS FOR EROSION (Initialisation)
!
      DOUBLE PRECISION :: TOCE_LAYER(NLAYMAX)
!
!     SEDIMENT BED LAYER THICKNESS (Initialisation)
!
      DOUBLE PRECISION :: ES_LAYER(NLAYMAX)
!
!  Mass bilan
! MASSINI IN SISYPHE
!
      DOUBLE PRECISION :: MASSUSP0, MASSUSP 
!
!      DOUBLE PRECISION :: MASTEN, MASTOU
!
!      DOUBLE PRECISION :: MASTCP, MASFIN
!
      DOUBLE PRECISION :: MASDEP     
!
      DOUBLE PRECISION :: MASBED0,MASBED

! ...CV
!
!     THICKNESS OF FRESH DEPOSIT (FLUID MUD LAYER)
!
      TYPE(BIEF_OBJ), TARGET :: HDEP
!
!     EROSION FLUX
!
      TYPE(BIEF_OBJ), TARGET :: FLUER
!
!     PROBABILITY OF DEPOSIT
!
      TYPE(BIEF_OBJ), TARGET :: PDEPO
!
! CV...
!       Harmonisation avec Sisyphe
!
!     DEPOSITION FLUX
!
      TYPE(BIEF_OBJ), TARGET :: FLUDP
!
!     DEPOSITION FLUX (Implict part : can replace PDEPO)
!
      TYPE(BIEF_OBJ), TARGET :: FLUDPT
!
!     BED EVOLUTION
!
      TYPE(BIEF_OBJ), TARGET :: ZF_S
!
!     CUMULATED BED EVOLUTION
!
      TYPE(BIEF_OBJ), TARGET :: ESOMT
!
! ...CV
! 
!     RIDIG BED ELEVATION
!
      TYPE(BIEF_OBJ), TARGET :: ZR
!
!     EQUILIBRIUM CONCENTRATION
!
      TYPE(BIEF_OBJ), TARGET :: CREF
!
!     AVERAGE DIAMETER OF GRAINS
!
      TYPE(BIEF_OBJ), TARGET :: DMOY
!
!     NUMBER OF POINTS WITHIN THE BED ALONG THE VERTICAL
!
      TYPE(BIEF_OBJ), TARGET :: NPF
!
!     VECTOR OF SIZE NDP*NELEM (NUMBER OF POINTS IN THE ELEMENT * NELEM)     
!
      TYPE(BIEF_OBJ), TARGET :: WEL
!
!     3D VECTOR TO STORE DH AND HN IN 3D MESH (RESTART PROCEDURE)     
!
      TYPE(BIEF_OBJ), TARGET :: DHHN
!
!     FOR TIDAL BOUNDARY CONDITIONS
!
      TYPE(BIEF_OBJ),TARGET :: HBTIDE,UBTIDE,VBTIDE,NUMTIDE
!
!     VARIABLES TRANSMITTED FROM TOMAWAC TO SISYPHE
!
      TYPE(BIEF_OBJ),TARGET :: DIRMOY,HM0,TPR5,ORBVEL
!
!     VARIABLES USED IN CASE OF MIXED SEDIMENT
!
      TYPE(BIEF_OBJ),TARGET :: EPAICO,EPAINCO,PVSCO,PVSNCO,FLUERC
      TYPE(BIEF_OBJ),TARGET :: FLUDPTC,FLUDPTNC,FLUDPC,FLUDPNC,FLUERNC
!
!-----------------------------------------------------------------------
! (2) MATRICES
!-----------------------------------------------------------------------
!
!
!     SUPG NON SYMMETRIC MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MSUPG
!
!     MURD NON SYMMETRIC MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MMURD
!
!     DIFFUSION MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MDIFF
!
!     MURD MATRIX FOR TIDAL FLATS VERSION
!
      TYPE(BIEF_OBJ), TARGET :: MURD_TF
!
!     WORKING MATRICES
!
      TYPE(BIEF_OBJ), TARGET :: MTRA1,MTRA2
!
!     2D BOUNDARY MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MBOR2D
!
!     WORKING 2D MATRIX
!
      TYPE(BIEF_OBJ), TARGET :: MATR2H
!
!-----------------------------------------------------------------------
! (3) BLOCKS
!-----------------------------------------------------------------------
!
!
!     TRACERS AT PREVIOUS TIME STEP (TAN IN VERSIONS PRIOR TO 6.3
!                                    WHICH WAS A CONFLICT WITH TANgent)
!
      TYPE(BIEF_OBJ), TARGET :: TRN
!
!     TRACERS AFTER ADVECTION
!
      TYPE(BIEF_OBJ), TARGET :: TAC
!
!     TRACERS AT CURRENT TIME STEP
!
      TYPE(BIEF_OBJ), TARGET :: TA
!
!     EXPLICIT SOURCE TERM FOR TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: S0TA
!
!     IMPLICIT SOURCE TERM FOR TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: S1TA
!
!     PRESCRIBED TRACERS ON THE BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: TABORF
!
!     PRESCRIBED TRACERS ON THE LATERAL BOUNDARY
!
      TYPE(BIEF_OBJ), TARGET :: TABORL
!
!     PRESCRIBED TRACERS AT THE FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: TABORS
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: ATABOF
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: BTABOF
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: ATABOL
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: BTABOL
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: ATABOS
!
!     LOGARITHMIC LAW FOR TRACERS: NU*DTA/DN = ATABO*TA + BTABO
!
      TYPE(BIEF_OBJ), TARGET :: BTABOS
!
!     TYPES OF BOUNDARY CONDITIONS FOR TRACERS ON THE BOTTOM
!
      TYPE(BIEF_OBJ), TARGET :: LITABF
!
!     TYPES OF BOUNDARY CONDITIONS FOR TRACERS ON THE LATERAL BOUNDARY
!
      TYPE(BIEF_OBJ), TARGET :: LITABL
!
!     TYPES OF BOUNDARY CONDITIONS FOR TRACERS AT THE FREE SURFACE
!
      TYPE(BIEF_OBJ), TARGET :: LITABS
!
!     VISCOSITY
!
      TYPE(BIEF_OBJ), TARGET :: VISCVI
!
!     DIFFUSIVITY FOR TRACERS
!
      TYPE(BIEF_OBJ), TARGET :: VISCTA
!
!     BOTTOM GRADIENTS
!
      TYPE(BIEF_OBJ), TARGET :: GRADZF
!
!     FREE SURFACE GRADIENT (BLOCK OF 2 COMPONENTS)
!
      TYPE(BIEF_OBJ), TARGET :: GRADZS
!
!     OLD FREE SURFACE GRADIENT (BLOCK OF 2 COMPONENTS)
!
      TYPE(BIEF_OBJ), TARGET :: GRADZN
!
!     2D MASK, FOR TELEMAC2D COMPATIBILITY
!
      TYPE(BIEF_OBJ), TARGET :: MASK,MASK_3D
!
!     BLOCKS OF ARRAYS FOR THE USER
!
      TYPE(BIEF_OBJ), TARGET :: PRIVE
!
!     BLOCKS OF ARRAYS FOR THE USER
!
      TYPE(BIEF_OBJ), TARGET :: MAT2D, TM1
!
!     BLOCKS THAT WILL CONTAIN WORK STRUCTURES
!
      TYPE(BIEF_OBJ), TARGET :: TRAV3,TRAV2,ITRAV3
!
      TYPE(BIEF_OBJ), TARGET :: VARSOR, VARCL
!
      TYPE(BIEF_OBJ), TARGET :: VARSO3
!
!     VALUES OF ADVECTED VARIABLES AT SOURCES
!
      TYPE(BIEF_OBJ), TARGET :: U_SCE,V_SCE,W_SCE,AK_SCE,EP_SCE,TA_SCE
!
!     VOID BLOCK FOR CALL COMPATIBILITY
!
      TYPE(BIEF_OBJ), TARGET :: BVIDE
!
!-----------------------------------------------------------------------
! (4) INTEGERS
!-----------------------------------------------------------------------
!
!     KEYWORDS AND PARAMETERS
!
!     MAXIMUM OF SOURCE POINTS
!
      INTEGER, PARAMETER :: MAXSCE = 100
!
!     MAXIMUM OF LIQUID BOUNDARIES
!
      INTEGER, PARAMETER :: MAXFRO = 3000
!
!     MAXIMUM OF TRACERS
!
      INTEGER, PARAMETER :: MAXTRA = 20
!
!     MAXIMUM OF OUTPUT VARIABLES
!
      INTEGER, PARAMETER :: MAXVAR = 100
!
!     MAXIMUM OF OUTPUT VARIABLES FOR 3D
!
      INTEGER, PARAMETER :: MAXVA3 = 100
!
!     ADDRESS OF TRACERS IN VARSO3
!     IT IS COMPUTED IN POINT_TELEMAC3D, BUT IS USED BEFORE
!
      INTEGER, PARAMETER :: ADR_TRAC = 29
!
!     NUMBER OF TIME STEPS
!
      INTEGER NIT
!
!     NUMBER OF HORIZONTAL PLANES
!
      INTEGER NPLAN
!
!     NUMBER OF TRACERS
!
      INTEGER NTRAC
!
!     NUMBER OF PRESCRIBED TRACERS GIVEN
!
      INTEGER NTRACER
!
!     PRINTOUT PERIOD FOR FLOATING BODIES
!
      INTEGER FLOPRD
!
!     NUMBER OF DROGUES (CONSIDERED AS THE MAXIMUM)
!
      INTEGER NFLOT_MAX,NFLOT
!
!     PRINTOUT PERIOD FOR RESULT FILE
!
      INTEGER GRAPRD
!
!     LISTING PRINTOUT PERIOD
!
      INTEGER LISPRD
!
!     NUMBER OF FIRST TIME STEP FOR GRAPHIC PRINTOUTS
!
      INTEGER GRADEB
!
!     NUMBER OF FIRST TIME STEP FOR LISTING PRINTOUTS
!
      INTEGER LISDEB
!
!     NUMBER OF BOTTOM SMOOTHINGS
!
      INTEGER LISFON
!
!     NUMBER OF SUB ITERATIONS FOR NON LINEARITIES
!
      INTEGER NSOUSI
!
!     HORIZONTAL TURBULENCE MODEL
!
      INTEGER ITURBH
!
!     VERTICAL TURBULENCE MODEL
!
      INTEGER ITURBV
!
!     TURBULENCE MODEL FOR THE BOTTOM
!
      INTEGER LISRUF
!
!     TURBULENCE MODEL FOR LATERAL SOLID BOUNDARIES
!
      INTEGER LISRUL
!
!     INITIAL GUESS FOR DEPTH
!
      INTEGER IORDRH
!
!     SPATIAL PROJECTION TYPE
!
      INTEGER PROTYP
!
!     NUMBER OF SOURCE POINTS
!
      INTEGER NSCE
!
!     ADDRESSES OF SOURCE POINTS IN THE 2D MESH
!
      INTEGER ISCE(MAXSCE)
!
!     PLANE NUMBERS OF SOURCE POINTS IN THE 2D MESH
!
      INTEGER KSCE(MAXSCE)
!
!     NUMBER OF VELOCITIES OF SOURCES GIVEN
!
      INTEGER NREJEU
!
!     SCHEME FOR ADVECTION OF VELOCITIES
!
      INTEGER SCHCVI
!
!     SCHEME FOR ADVECTION OF TRACERS
!
      INTEGER SCHCTA(MAXTRA)
!
!     SCHEME FOR ADVECTION OF K-EPSILON
!
      INTEGER SCHCKE
!
!     SCHEME FOR ADVECTION OF DEPTH
!
      INTEGER SCHCH
!
!     SCHEME FOR DIFFUSION OF VELOCITIES
!
      INTEGER SCHDVI
!
!     SCHEME FOR DIFFUSION OF TRACERS
!
      INTEGER SCHDTA
!
!     SCHEME FOR DIFFUSION OF K-EPSILON
!
      INTEGER SCHDKE
!
!     TREATMENT ON TIDAL FLATS FOR VELOCITIES
!
      INTEGER TRBAVI
!
!     TREATMENT ON TIDAL FLATS FOR TRACERS
!
      INTEGER TRBATA
!
!     TREATMENT ON TIDAL FLATS FOR K-EPSILON
!
      INTEGER TRBAKE
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED DISCHARGE
!
      INTEGER NDEBIT
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED ELEVATION
!
      INTEGER NCOTE
!
!     NUMBER OF BOUNDARIES WITH PRESCRIBED VELOCITY
!
      INTEGER NVIT
!
!     ORIGINAL DATE OF TIME
!
      INTEGER MARDAT(3)
!
!     ORIGINAL HOUR OF TIME
!
      INTEGER MARTIM(3)
!
!     VECTOR LENGTH
!
      INTEGER LVMAC
!
!     NUMBER OF ARRAYS IN BLOCK PRIVE
!
      INTEGER NPRIV
!
!     RANK OF TEMPERATURE IN TRACERS
!
      INTEGER IND_T
!
!     RANK OF SALINITY IN TRACERS
!
      INTEGER IND_S
!
!     NUMBER OF POINTS IN THE ELEMENT
!
      INTEGER NDP
!
!     LAW OF BOTTOM FRICTION
!
      INTEGER KFROT
!
!     LAW OF FRICTION ON LATERAL BOUNDARIES
!
      INTEGER KFROTL
!
!     MATRIX STORAGE
!
      INTEGER OPTASS
!
!     MATRIX-VECTOR PRODUCT
!
      INTEGER PRODUC
!
!     OPTION FOR THE TREATMENT OF TIDAL FLATS
!
      INTEGER OPTBAN
!
!     TREATMENT OF NEGATIVE DEPTHS
!
      INTEGER OPT_HNEG
!
!     OPTION FOR THE DIFFUSION OF VELOCITIES
!
      INTEGER OPDVIT
!
!     OPTION FOR THE TREATMENT OF SOURCES
!
      INTEGER OPTSOU
!
!     SUPG OPTION
!
      INTEGER OPTSUP(4)
!
!     MATRIX STORAGE FOR 2D MATRICES
!
      INTEGER OPTASS2D
!
!     3D DISCRETISATION TYPE
!
      INTEGER IELM3
!
!     2D DISCRETISATION TYPES, HORIZONTAL, VERTICAL
!
      INTEGER IELM2H,IELM2V
!
!     DISCRETISATION TYPES
!
      INTEGER IELM0, IELMH, IELMU, IELM1, IELMX
!
!     NUMBER OF LAYERS OF 3D ELEMENTS (NPLAN - 1)
!
      INTEGER NETAGE
!
!     NUMBER OF VARIABLES TREATED IN MASS BALANCE
!
      INTEGER NVBIL
!
!     MAXIMUM NUMBER OF HORIZONTAL PLANES WITHIN THE BED (GIBSON MODEL)
! OBSOLETE, replaced by NCOUCH ou NLAYMAX
      INTEGER NPFMAX

! NEW
!     NUMBER OF LAYERS WITHIN THE BED (MULTILAYER MODEL)
!
      INTEGER NCOUCH
!
!     MIXING LENGTH MODEL
!
      INTEGER MIXING
!
!     DAMPING FUNCTION
!
      INTEGER DAMPING
!
!     VELOCITY PROFILES
!
      INTEGER PROFVEL(MAXFRO)
!
!     TREATMENT OF FLUXES AT THE BOUNDARIES
!
      INTEGER DIRFLU(0:MAXFRO)
!
!     VELOCITY VERTICAL PROFILES
!
      INTEGER VERPROVEL(MAXFRO)
!
!     TRACERS VERTICAL PROFILES
!
      INTEGER VERPROTRA(MAXFRO*MAXTRA)
! 
!     NUMBER OF LIQUID BOUNDARIES, OF SOLID BOUNDARIES
!     FIRST AND LAST POINTS OF THESE BOUNDARIES
!
      INTEGER NFRLIQ,NFRSOL
      INTEGER DEBLIQ(MAXFRO),FINLIQ(MAXFRO)
      INTEGER DEBSOL(MAXFRO),FINSOL(MAXFRO)
!
!     CHOICE OF MESH TRANSFORMATION
!
      INTEGER TRANSF
!
!     OPTION FOR THE DIFFUSION
!
      INTEGER OPTDIF
!
!     CHOICE OF DENSITY LAW
!
      INTEGER DENLAW
!
!     DELWAQ PRINTOUT PERIOD
!
      INTEGER WAQPRD
!
!     ORIGIN COORDINATES
!
      INTEGER I_ORIG,J_ORIG
!
!     NUMBER OF POINTS GIVEN FOR EACH DISCHARGE-ELEVATIONS CURVES
!
      INTEGER PTS_CURVES(MAXFRO)
!
!     STAGE-DISCHARGE CURVES
!
      INTEGER STA_DIS_CURVES(MAXFRO)
!
!     KEYWORD DEBUGGER
!
      INTEGER DEBUG
!
!     SKIN FRICTION
!
      INTEGER ICR
!
!     Equilibrium transport formula
!
      INTEGER ICQ
!      
!     RECORD NUMBER IN THE WAVE DRIVEN CURRENTS FILE
!
      INTEGER NPTH
!
!     GEOMETRY FILE NUMBER
!
      INTEGER T3DGEO
!
!     BOUNDARY CONDITIONS FILE NUMBER
!
      INTEGER T3DCLI
!
!     PREVIOUS COMPUTATION FILE NUMBER
!
      INTEGER T3DPRE
!
!     RESULT FILE NUMBER
!
      INTEGER T3DRES
!
!     BOTTOM TOPOGRAPHY FILE NUMBER
!
      INTEGER T3DFON
!
!     FILE NUMBER FOR SCOPE
!
      INTEGER T3DSCO
!
!     2D RESULT FILE NUMBER
!
      INTEGER T3DHYD
!
!     FORMATTED DATA FILE 1
!
      INTEGER T3DFO1
!
!     FORMATTED DATA FILE 2
!
      INTEGER T3DFO2
!
!     BINARY DATA FILE 1
!
      INTEGER T3DBI1
!
!     BINARY DATA FILE 2
!
      INTEGER T3DBI2
!
!     SEDIMENTOLOGICAL RESULT FILE     
!
      INTEGER T3DSED
!
!     PREVIOUS COMPUTATION SEDIMENTOLOGICAL FILE   
!
      INTEGER T3DSUS
!
!     REFERENCE FILE NUMBER
!
      INTEGER T3DREF
!
!     LIQUID BOUNDARIES FILE NUMBER
!
      INTEGER T3DIMP
!
!     FILES FOR DELWAQ
!
      INTEGER T3DDL1,T3DDL2,T3DDL3,T3DDL4,T3DDL5,T3DDL6,T3DDL7,T3DDL8
      INTEGER T3DDL9,T3DL10,T3DL11
!
!     STAGE-DISCHARGE CURVES FILE NUMBER
!
      INTEGER T3DPAR
!
!     SOURCES FILE NUMBER
!
      INTEGER T3DVEF
!
!     BINARY RESULTS FILE NUMBER
!
      INTEGER T3DRBI
!
!     FORMATTED RESULTS FILE NUMBER
!
      INTEGER T3DRFO
!
!     MIGRHYCAR STEERING FILE
!
      INTEGER T3DMIG
!
!     RESTART FILE
!
      INTEGER T3DRST
!
!     HARMONIC CONSTANTS FILE NUMBER
!
      INTEGER T3DHAR
!
!     TIDAL MODEL FILE NUMBER
! 
      INTEGER T3DTID
!
!     ASCII TIDAL MODEL DATABASE FILE NUMBER
! 
      INTEGER T3DBDD
!
!     BINARY TIDAL MODEL DATABASES 1 AND 2 FILE NUMBER
!
      INTEGER T3DBB1,T3DBB2
!
!     DROGUES FILE
!
      INTEGER T3DFLO
!
!     FILE FOR 2D CONTINUATION
!
      INTEGER T3DS2D
!
!     NUMBER OF VARIABLES TO BE ADVECTED BY A GIVEN SCHEME
!     AND THEIR LIST IN THE LIST OF ADVECTED VARIABLES
!     S_ADV: ASSOCIATED ADVECTION SCHEME
!     NOM_ADV: RANK TO FIND THE NAME IN TEXT3 
!
      INTEGER N_ADV(0:15),LIST_ADV(100,0:15),S_ADV(5+MAXTRA)
      INTEGER NOM_ADV(5+MAXTRA)
!
!     COUPLING PERIODS FOR SISYPHE AND TOMAWAC 
!
      INTEGER PERCOU_SIS,PERCOU_WAC
!
!     BOUNDARY CONDITION ON THE BOTTOM 
!
      INTEGER BC_BOTTOM
!
!     THOMPSON BOUNDARY CONDITIONS 
!
      INTEGER FRTYPE(MAXFRO)
!
!     VERTICAL VELOCITY DERIVATIVES
!
      INTEGER LINLOG
!
!     RECORD NUMBER FOR RESTART
!
      INTEGER START_RECORD
!
!     OPTION FOR TIDAL BOUNDARY CONDITIONS
!
      INTEGER TIDALTYPE
!
!     TIDAL DATA BASE
!
      INTEGER TIDALDB
!
!     GEOGRAPHIC SYSTEM
!
      INTEGER GEOSYST
!
!     ZONE NUMBER IN GEOGRAPHIC SYSTEM
!
      INTEGER NUMZONE
!
!     FOR MONITORING K-EPSILON MODEL (SEE SUBROUTINE CSTKEP)
!
      INTEGER OPTPROD,LIMKF,LIMEF,LIMKS,LIMES
!
!     MAXIMUM NUMBER OF ITERATIONS FOR ADVECTION SCHEMES
!
      INTEGER MAXADV
!
!     OPTION FOR CHARACTERISTICS,
!     NUMBER OF GAUSS POINTS FOR WEAK CHARACTERISTICS
!
      INTEGER OPTCHA,NGAUSS
!
!     ATMOSPHERE-WATER EXCHANGE MODEL
!
      INTEGER ATMOSEXCH
!
!     MASS-LUMPING FOR WEAK CHARACTERISTICS
! 
      DOUBLE PRECISION AGGLOW
!
!-----------------------------------------------------------------------
! (5) LOGICAL VALUES
!-----------------------------------------------------------------------
!
!     LOGICAL STEERING PARAMETERS
!
      LOGICAL DEBU,   PROP
!
!     IF YES, CORIOLIS
!
      LOGICAL CORIOL
!
!     IF YES, WIND TAKEN INTO ACCOUNT
!
      LOGICAL VENT
!
!     AIR PRESSURE
!
      LOGICAL ATMOS
!
!     IF YES, SEDIMENT
!
      LOGICAL SEDI
!
!     IF YES, TIDAL FLATS
!
      LOGICAL BANDEC
!
!     IF YES, PROPAGATION LINEARISED
!
      LOGICAL PROLIN
!
!     IF YES, MASS BALANCE
!
      LOGICAL BILMAS
!
!     INFORMATION ABOUT MASS-BALANCE FOR EACH LISTING PRINTOUT
!
      LOGICAL INFMAS
!
!     IF YES, MESH WITH SIGMA TRANSFORMATION
!
      LOGICAL SIGMAG
!
!     IF YES, HYDROSTATIC INCONSISTENCY FILTER
!
      LOGICAL INCHYD
!
!     ARRAYS SAYING IF A VARIABLE IS TO BE PRINTED IN RESULTS FILES
!
      LOGICAL SORG2D(MAXVAR),SORG3D(MAXVA3),SOREST(MAXVA3)
!
!     ARRAYS SAYING IF A VARIABLE IS TO BE PRINTED IN THE LISTING
!
      LOGICAL SORIMP(MAXVAR),SORIM3(MAXVA3),SORIS3(MAXVA3)
! 
!     IF YES, CONTINUATION FROM A 2D FILE
!
      LOGICAL SUIT2
!
!     IF YES, RAIN OR EVAPORATION
!
      LOGICAL RAIN
!
!     IF YES, STABILISED INITIAL CONDITION
!
      LOGICAL CONSOL
!
!     IF YES, ELEMENTS MASKED BY USER
!
      LOGICAL MSKUSE
!
!     DIF(I) WILL SAY IF DIFFUSION SOLVER I IS USED FOR AT LEAST ONE OF THE VARIABLES
!
      LOGICAL DIF(0:2)
! 
!     IF YES, SPHERICAL COORDINATES (NOT IMPLEMENTED)
!
      LOGICAL SPHERI
!
!     IF YES, THERE ARE MASKED ELEMENTS
!
      LOGICAL MSK
!
!     IF YES, LISTING PRINTOUT
!
      LOGICAL LISTIN
!
!     IF YES, INFORMATION PRINTED ON LISTING
!
      LOGICAL INFOGR
!
!     IF YES, VALIDATION
!
      LOGICAL VALID
!
!     IF YES,  CONSOLIDATION MODEL
!
      LOGICAL TASSE
!     
!     CHOICE OF MODEL
!
      INTEGER ITASS
!
!     IF YES, GIBSON CONSOLIDATION MODEL
!
      LOGICAL GIBSON
!
!     IF YES, INFLUENCE OF TURBULENCE ON SETTLING VELOCITY
!
      LOGICAL TURBWC
!
!     IF YES, COHESIVE SEDIMENT
!
      LOGICAL SEDCO
!
!     IF YES, NON-HYDROSTATIC VERSION
!
      LOGICAL NONHYD
!
!     CONSISTENT PROJECTION (OBSOLETE...)
!
      LOGICAL CONPRO
!
!     FOR INITIALISATION OF K-EPSILON (SET IN CONDIM)
!
      LOGICAL AKEP
!
!     FOR INITIALISATION OF K-OMEGA (SET IN CONDIM)
!
      LOGICAL AKOM
!
!     IF YES, INITIAL TIME RESET TO ZERO IN A COMPUTATION CONTINUED
!
      LOGICAL RAZTIM
!
!     IF YES, DYNAMIC PRESSURE IN WAVE EQUATION
!
      LOGICAL DPWAVEQ
!
!     IF YES, DYNAMIC BOUNDARY CONDITION
!
      LOGICAL CLDYN
!
!     IF YES, SALINITY FOR DELWAQ
!
      LOGICAL SALI_DEL
!
!     IF YES, TEMPERATURE FOR DELWAQ
!
      LOGICAL TEMP_DEL
!
!     IF YES, VELOCITY FOR DELWAQ
!
      LOGICAL VELO_DEL
!
!     IF YES, DIFFUSION FOR DELWAQ
!
      LOGICAL DIFF_DEL
!
!     IF YES, WAVE DRIVEN CURRENTS
!
      LOGICAL COUROU
!
!     IF YES, BYPASS VOID VOLUMES
!
      LOGICAL BYPASS
!
!     PROJECTION OF VELOCITY ON LATERAL SOLID BOUNDARIES
!
      LOGICAL VELPROLAT
!
!     PROJECTION OF VELOCITY ON BOTTOM
!
      LOGICAL VELPROBOT
!
!     FOR CALCULATING FLUXES OF ADVECTED VARIABLES
!
      LOGICAL CALCFLU(5+MAXTRA)
!
!     FOR TAKING INTO ACCOUNT RAIN IN ADVECTION OF VARIABLES
!
      LOGICAL CALCRAIN(5+MAXTRA)
!
!     OIL SPILL MODEL
!
      LOGICAL SPILL_MODEL
!
!     THOMFR (TRUE IF ONE OF THE VALUES IN FRTYPE IS 2)
!
      LOGICAL THOMFR
!
!     RESTART MODE (TO GENERATE A RESTART FILE)
!
      LOGICAL RESTART_MODE
!
!     IF YES, INFERENCE OF MINOR CONSTITUENTS
!  
      LOGICAL INTMICON
!
!     FOR MONITORING K-EPSILON MODEL (SEE SUBROUTINE CSTKEP)
!
      LOGICAL CLIPK,CLIPE,YAP,WSIK
!
!     TIDE GENERATING FORCE
!
      LOGICAL MAREE
!
!###<TBE/DMK changes
!     EXPLICIT SCHEME FOR SETTLING
      LOGICAL  READ_TOCE
      INTEGER SETDEP
!###<TBE/DMK changes
!
!     MIXED SEDIMENT, NON COHESIVE SEDIMENT
!
      LOGICAL MIXTE,SEDNCO
!
!-----------------------------------------------------------------------
! (6) REALS
!-----------------------------------------------------------------------
!
!     TIME
!
      DOUBLE PRECISION AT
!
!     TIMESTEP
!
      DOUBLE PRECISION DT
!
!     DURATION
!
      DOUBLE PRECISION DUREE
!
!     GRAVITY ACCELERATION
!
      DOUBLE PRECISION GRAV
!
!     CORIOLIS COEFFICIENT
!
      DOUBLE PRECISION FCOR
!
!     DRAG COEFFICIENT OF WIND
!
      DOUBLE PRECISION FAIR
!
!     WIND VELOCITY ALONG X, AND Y
!
      DOUBLE PRECISION FUAIR,FVAIR
!
!     AIR TEMPERATURE
!
      DOUBLE PRECISION TAIR
!
!     WATER DENSITY AT REFERENCE CONCENTRATION
!
      DOUBLE PRECISION RHO0
!
!     FRICTION COEFFICIENT FOR THE BOTTOM
!
      DOUBLE PRECISION RUGOF0
!
!     FRICTION COEFFICIENT FOR LATERAL SOLID BOUNDARIES
!
      DOUBLE PRECISION RUGOL0
!
!     ZERO
!
      DOUBLE PRECISION ZERO
!
!     MINIMAL VALUE FOR DEPTH
!
      DOUBLE PRECISION HMIN
!
!     MEAN DEPTH FOR LINEARIZATION
!
      DOUBLE PRECISION HAULIN
!
!     COEFFICIENT FOR HORIZONTAL DIFFUSION OF VELOCITIES
!
      DOUBLE PRECISION DNUVIH
!
!     COEFFICIENT FOR VERTICAL DIFFUSION OF VELOCITIES
!
      DOUBLE PRECISION DNUVIV
!
!     COEFFICIENT FOR HORIZONTAL DIFFUSION OF TRACERS
!
      DOUBLE PRECISION DNUTAH
!
!     COEFFICIENT FOR VERTICAL DIFFUSION OF TRACERS
!
      DOUBLE PRECISION DNUTAV
!
!     INITIAL DEPTH
!
      DOUBLE PRECISION HAUTIN
!
!     INITIAL ELEVATION
!
      DOUBLE PRECISION COTINI
!
!     RAIN OR EVAPORATION IN MM PER DAY
!
      DOUBLE PRECISION RAIN_MMPD
!
!     IMPLICITATION FOR DEPTH
!
      DOUBLE PRECISION TETAH
!
!     IMPLICITATION FOR VELOCITIES
!
      DOUBLE PRECISION TETAU
!
!     IMPLICITATIONS FOR DIFFUSION ?
!
      DOUBLE PRECISION TETAD,TETADI
!
!     MASS-LUMPING FOR DEPTH, DIFFUSION, VELOCITIES
!
      DOUBLE PRECISION AGGLOH,AGGLOD,AGGLOU
!
!     ARRAY OF PRESCRIBED FLOWRATES, ELEVATIONS, VELOCITIES
!
      DOUBLE PRECISION DEBIMP(MAXFRO),COTIMP(MAXFRO),VITIMP(MAXFRO)
!
!     BETA EXPANSION COEFFICIENT FOR TRACERS
!
      DOUBLE PRECISION BETAC(MAXTRA)
!
!     REFERENCE CONCENTRATION OF TRACERS
!
      DOUBLE PRECISION T0AC(MAXTRA)
!
!     INITIAL VALUES OF TRACERS
!
      DOUBLE PRECISION TRAC0(MAXTRA)
!
!     VALUES OF TRACERS IN THE RAIN
!
      DOUBLE PRECISION TRAIN(MAXTRA)
!
!     DENSITY OF THE SEDIMENT
!
      DOUBLE PRECISION RHOS
!
!     CRITICAL SHEAR STRESS FOR DEPOSITION
!
      DOUBLE PRECISION TOCD
!
!     CONCENTRATION (G/L) OF FRESH DEPOSITS
!
      DOUBLE PRECISION CFDEP
!      
! CV: non cohesive bed porosity 
!
      DOUBLE PRECISION XKV
!
!     REFERENCE BED LAYER THICKNESS FOR NEW LAYER CREATION
!
      DOUBLE PRECISION EPAI0
!
!     TIMESTEP FOR CONSOLIDATION
!
      DOUBLE PRECISION DTC
!
!     CONCENTRATION (G/L) OF THE CONSOLIDATED MUD
!
      DOUBLE PRECISION CFMAX
!
!     EROSION COEFFICIENT (EMPIRICAL PARTHENIADES COEFFICIENT)
!
      DOUBLE PRECISION MPART
!
!     CRITICAL SHEAR STRESS FOR EROSION (FRESH DEPOSIT)
! CV : now an array
!      DOUBLE PRECISION TOCE
! 
!     FLOCULATION COEFFICIENT
!
      DOUBLE PRECISION TURBA
!
!     COEFFICIENT RELATIVE TO FLOC DESTRUCTION
!
      DOUBLE PRECISION TURBB
!
!     CONSOLIDATION TIME SCALE (ONLY FOR MULTILAYER MODEL)
!
      DOUBLE PRECISION TREST(30)
!
!     CONSTANT SEDIMENT SETTLING VELOCITY (M/S)
!
      DOUBLE PRECISION WCHU0
!
!     MEAN DIAMETER OF THE SEDIMENT
!
      DOUBLE PRECISION D50
!
!     GEOGRAPHICAL LATITUDE IN GRAD, POSITIVE FOR NORTHERN AND NEGATIVE ON SOUTHERN HEMISPHERE
!
      DOUBLE PRECISION PHILAT
!
!     UPWIND COEFFICIENT (BETWEEN 0 AND 1)
!
      DOUBLE PRECISION DELTA
!
!     LATITUDE AND LONGITUDE OF THE ORIGIN POINT
!
      DOUBLE PRECISION LATIT,LONGIT
!
!     NORTH
!
      DOUBLE PRECISION NORD
!
!     FREE SURFACE GRADIENT COMPATIBILITY IN WAVE EQUATION
!
      DOUBLE PRECISION TETAZCOMP
!
!     ABSCISSAE, ORDINATES AND ELEVATIONS OF SOURCES
!
      DOUBLE PRECISION XSCE(MAXSCE),YSCE(MAXSCE),ZSCE(MAXSCE)
!
!     VELOCITIES OF THE SOURCES ALONG X, Y
!
      DOUBLE PRECISION USCE(MAXSCE),VSCE(MAXSCE)
!
!     WATER DISCHARGE OF SOURCES TAKEN FROM STEERING FILE
!
      DOUBLE PRECISION QSCE(MAXSCE)
!
!     WATER DISCHARGE OF SOURCES COMPUTED WITH T3D_DEBSCE (VARIATIONS IN TIME)
!
      DOUBLE PRECISION QSCE2(MAXSCE)
!
!     VALUE OF THE TRACERS AT THE SOURCES TAKEN FROM STEERING FILE
!
      DOUBLE PRECISION TASCE(MAXSCE,MAXTRA)
!
!     PRESCRIBED VALUES OF TRACERS AT LIQUID BOUNDARIES
!
      DOUBLE PRECISION TRACER(MAXFRO*MAXTRA)
!
!     RATIO BETWEEN SKIN FRICTION AND MEAN DIAMETER
!
      DOUBLE PRECISION KSPRATIO
!
!     SHIELDS PARAMETER
!
      DOUBLE PRECISION AC
!
!     FLUX AT BOUNDARIES
!
      DOUBLE PRECISION FLUX_BOUNDARIES(MAXFRO)
!
!     FOR STORING DISCHARGE-ELEVATION CURVES
!
      DOUBLE PRECISION, ALLOCATABLE :: QZ(:,:,:)
!
!     THRESHOLD DEPTH FOR WIND
!
      DOUBLE PRECISION HWIND
!
!     CUMULATED FLUXES OF WATER SINCE BEGINNING OF COMPUTATION
!
      DOUBLE PRECISION FLUXTOTCUM
!
!     INITIAL, PAST AND PRESENT MASS OF WATER
!
      DOUBLE PRECISION MASINI_WATER, MASSEN_WATER,MASSE_WATER
!
!     THRESHOLD FOR VISCOSITY CORRECTION ON TIDAL FLATS
!
      DOUBLE PRECISION HLIM
!
!     THRESHOLD FOR VISCOSITY CORRECTION ON TIDAL FLATS
!
      DOUBLE PRECISION HSED

!
!     COEFFICIENT TO CALIBRATE TIDAL RANGE
!
      DOUBLE PRECISION CTIDE
!
!     COEFFICIENT TO CALIBRATE TIDAL VELOCITIES
!
      DOUBLE PRECISION CTIDEV
!
!     COEFFICIENT TO CALIBRATE SEA LEVEL
!
      DOUBLE PRECISION MSL
!
!     COEFFICIENT TO CALIBRATE THE ATMOSPHERE-WATER EXCHANGE MODEL
!
      DOUBLE PRECISION C_ATMOS
!
!     SETTLING VELOCITY OF SAND
!
      DOUBLE PRECISION WCS0
      TYPE(BIEF_OBJ), TARGET :: WCS
!
!     INITIAL PERCENTAGE OF NON COHESIVE SEDIMENT
!
      DOUBLE PRECISION PVSNCO0
!
!-----------------------------------------------------------------------
! (7) STRINGS
!-----------------------------------------------------------------------
!
!     TITLE
!
      CHARACTER(LEN=72) TITCAS
!
!     VARIABLES FOR GRAPHIC PRINTOUTS
!
      CHARACTER(LEN=72) SORT3D,SORT2D
!
!
!
      CHARACTER(LEN=72) VARIMP
!
!
!
      CHARACTER(LEN=72) VARIM3
!
!     INITIAL CONDITIONS
!
      CHARACTER(LEN=72) CDTINI
!
!     CHOICE OF ELEMENT
!
      CHARACTER(LEN=72) ELEMENT
!
!
!
      CHARACTER(LEN=3)  BINGEO
!
!
!
      CHARACTER(LEN=3)  BINRES
!
!
!
      CHARACTER(LEN=3)  BINPRE
!
!
!
      CHARACTER(LEN=3)  BINHYD
!
!     CHOICE OF EQUATIONS TO SOLVE
!
      CHARACTER(LEN=20) EQUA
!
!
!
      CHARACTER(LEN=32) VARCLA(10)
!
!     NAMES OF VARIABLES RECOGNISED FROM RESULTS AND GEOMETRY FILES
!
      CHARACTER(LEN=32) TEXTE(MAXVAR)
!
!     NAMES OF VARIABLES RECOGNISED FROM PREVIOUS COMPUTATION FILE
!
      CHARACTER(LEN=32) TEXTPR(MAXVAR)
!
!
!
      CHARACTER(LEN=32) TEXT3(MAXVA3)
!
!
!
      CHARACTER(LEN=32) TEXTP3(MAXVA3)
!
!
!
      CHARACTER(LEN=3) BIRSED
!
!
!
      CHARACTER(LEN=3) BISUIS
!
!
!
      CHARACTER(LEN=32) NAMETRAC(32)
!
!-----------------------------------------------------------------------
! (8) SLVCFG STRUCTURES
!-----------------------------------------------------------------------
!
!     SOLVER FOR DIFFUSION OF VELOCITIES
!
      TYPE(SLVCFG) :: SLVDVI
!
!     SOLVER FOR PROPAGATION
!
      TYPE(SLVCFG) :: SLVPRO
!
!     SOLVER FOR DIFFUSION OF K-EPSILON
!
      TYPE(SLVCFG) :: SLVDKE
!
!     SOLVER FOR DIFFUSION OF TRACERS
!
      TYPE(SLVCFG) :: SLVDTA(MAXTRA)
!
!     SOLVER FOR VERTICAL VELOCITY COMPONENT
!
      TYPE(SLVCFG) :: SLVW
!
!     SOLVER FOR DIFFUSION OF THE SEDIMENT
!
      TYPE(SLVCFG) :: SLVDSE
!
!     SOLVER FOR PPE (NON-HYDROSTATIC)
!
      TYPE(SLVCFG) :: SLVPOI
!
!     SOLVER FOR PROJECTION (NON-HYDROSTATIC)
!
      TYPE(SLVCFG) :: SLVPRJ
!
!-----------------------------------------------------------------------
! (9) MESH STRUCTURE(S)
!-----------------------------------------------------------------------
! 2 SEPARATE MESHES, 2D AS USUAL AND 3D WITH SIGMA-MESH SPECIFIC
! FEATURES, SEE ALMESH.F
!
!     2D MESH WITH SIGMA-MESH SPECIFIC FEATURES
!
      TYPE(BIEF_MESH) :: MESH2D
!
!     3D MESH WITH SIGMA-MESH SPECIFIC FEATURES
! 
      TYPE(BIEF_MESH) :: MESH3D
!
!-----------------------------------------------------------------------
! (10) ALIASES
!-----------------------------------------------------------------------
!
!     DECLARATION OF POINTERS FOR ALIASES
!     TARGETS ARE ALLOCATED AND POINTED TO IN POINT_TELEMAC3D
!
!     ALIASES FOR WORKING VECTORS, REAL 3D, INTEGER 3D, REAL 2D
!
!
!     BIEF_OBJ STRUCTURES FOR ARRAYS OF DIMENSION NPOIN3
!
      TYPE(BIEF_OBJ), POINTER :: T3_01,T3_02,T3_03,T3_04,T3_05
      TYPE(BIEF_OBJ), POINTER :: T3_06,T3_07,T3_08,T3_09,T3_10
      TYPE(BIEF_OBJ), POINTER :: T3_11,T3_12,T3_13,T3_14,T3_15
      TYPE(BIEF_OBJ), POINTER :: T3_16,T3_17,T3_18
!
!     BIEF_OBJ STRUCTURES FOR INTEGER ARRAYS
!
      TYPE(BIEF_OBJ), POINTER :: IT1, IT2, IT3, IT4
!
!     BIEF_OBJ STRUCTURE FOR LOCAL WORK, DIMENSION NPOIN2
!
      TYPE(BIEF_OBJ), POINTER :: T2_01,T2_02,T2_03,T2_04,T2_05
      TYPE(BIEF_OBJ), POINTER :: T2_06,T2_07,T2_08,T2_09,T2_10
      TYPE(BIEF_OBJ), POINTER :: T2_11,T2_12,T2_13,T2_14,T2_15
      TYPE(BIEF_OBJ), POINTER :: T2_16,T2_17,T2_18,T2_19,T2_20
      TYPE(BIEF_OBJ), POINTER :: T2_21,T2_22,T2_23
!
!     2D NODE COORDINATES
!
      TYPE(BIEF_OBJ), POINTER :: X2,Y2
!
!     3D NODE COORDINATES
!
      TYPE(BIEF_OBJ), POINTER :: X3,Y3,Z3
!
!     3D ELEMENT-ORIENTED WORKING FIELD ALLOCATED WITH THE MESH
!
      TYPE(BIEF_OBJ), POINTER :: W1
!
!     BASE TRIANGLE SURFACES
!
      TYPE(BIEF_OBJ), POINTER :: SURFA2
!
!     TRIANGLE SURFACES, IN 3D
!
      TYPE(BIEF_OBJ), POINTER :: SURFA3
!
!     LATERAL BOUNDARY NORMAL VECTORS DEFINED AT THE NODES
!
      TYPE(BIEF_OBJ), POINTER :: XNEBOR2
!
!     LATERAL BOUNDARY NORMAL VECTORS DEFINED AT THE NODES
!
      TYPE(BIEF_OBJ), POINTER :: YNEBOR2
!
!     2D NORMAL VECTORS DEFINED PER BOUNDARY SEGMENT
!
      TYPE(BIEF_OBJ), POINTER :: XSGBOR2
!
!     2D NORMAL VECTORS DEFINED PER BOUNDARY SEGMENT
!
      TYPE(BIEF_OBJ), POINTER :: YSGBOR2
!
!     3D NORMAL VECTORS DEFINED PER BOUNDARY ELEMENT
!
      TYPE(BIEF_OBJ), POINTER :: XSGBOR3
!
!     3D NORMAL VECTORS DEFINED PER BOUNDARY ELEMENT
!
      TYPE(BIEF_OBJ), POINTER :: YSGBOR3
!
!     3D NORMAL VECTORS DEFINED PER BOUNDARY ELEMENT
!
      TYPE(BIEF_OBJ), POINTER :: ZSGBOR3
!
!     CONNECTIVITY TABLES IN 2D  : (ELEMENT NUMBER AND LOCAL NODE NUMBER) --> GLOBAL NODE NUMBER
!
      TYPE(BIEF_OBJ), POINTER :: IKLE2
!
!     CONNECTIVITY TABLES IN 3D : (ELEMENT NUMBER AND LOCAL NODE NUMBER) --> GLOBAL NODE NUMBER
!
      TYPE(BIEF_OBJ), POINTER :: IKLE3
!
!     CONNECTIVITY TABLES IN 2D : (NODE BOUNDARY NUMBER) --> GLOBAL NODE NUMBER
!
      TYPE(BIEF_OBJ), POINTER :: NBOR2
!
!     CONNECTIVITY TABLES IN 3D : (NODE BOUNDARY NUMBER) --> GLOBAL NODE NUMBER
!
      TYPE(BIEF_OBJ), POINTER :: NBOR3
!
!     COORDINATES OF POINTS IN THE 3D MESH
!
      DOUBLE PRECISION, DIMENSION(:), POINTER :: X
!
!     COORDINATES OF POINTS IN THE 3D MESH
!
      DOUBLE PRECISION, DIMENSION(:), POINTER :: Y
!
!     COORDINATES OF POINTS IN THE 3D MESH
!
      DOUBLE PRECISION, DIMENSION(:), POINTER :: Z
!
!     NUMBER OF ELEMENTS IN THE 2D MESH
!
      INTEGER, POINTER:: NELEM2
!
!     NUMBER OF ELEMENTS IN THE 3D MESH
!
      INTEGER, POINTER:: NELEM3
!
!     MAXIMUM NUMBER OF ELEMENTS IN THE 2D MESH
!
      INTEGER, POINTER:: NELMAX2
!
!     MAXIMUM NUMBER OF ELEMENTS IN THE 3D MESH
!
      INTEGER, POINTER:: NELMAX3
!
!     NUMBER OF BOUNDARY POINTS IN THE 2D MESH
!
      INTEGER, POINTER:: NPTFR2
!
!     NUMBER OF BOUNDARY POINTS IN THE 3D MESH
!
      INTEGER, POINTER:: NPTFR3
!
!
!
      INTEGER, POINTER:: NELEB, NELEBX
!
!     MAXIMUM NUMBER OF BOUNDARY POINTS IN THE 2D MESH
!
      INTEGER, POINTER:: NPTFRX2
!
!     MAXIMUM NUMBER OF BOUNDARY POINTS IN THE 3D MESH
!
      INTEGER, POINTER:: NPTFRX3
!
!     DIMENSION OF 2D SPACE
!
      INTEGER, POINTER:: DIM2
!
!     DIMENSION OF 3D SPACE
!
      INTEGER, POINTER:: DIM3
!
!     TYPE OF 2D ELEMENT
!
      INTEGER, POINTER:: TYPELM2
!
!     TYPE OF 3D ELEMENT
!
      INTEGER, POINTER:: TYPELM3
!
!     NUMBER OF POINTS IN THE 2D MESH
!
      INTEGER, POINTER:: NPOIN2
!
!     NUMBER OF POINTS IN THE 3D MESH
!
      INTEGER, POINTER:: NPOIN3
!
!     MAXIMUM NUMBER OF POINTS IN THE 2D MESH
!
      INTEGER, POINTER:: NPMAX2
!
!     MAXIMUM NUMBER OF POINTS IN THE 3D MESH
!
      INTEGER, POINTER:: NPMAX3
!
!     MAXIMUM NUMBER OF POINTS NEIGHBOURS OF A POINT IN 2D
!
      INTEGER, POINTER:: MXPTVS2
!
!     MAXIMUM NUMBER OF POINTS NEIGHBOURS OF A POINT IN 3D
!
      INTEGER, POINTER:: MXPTVS3
!
!     MAXIMUM NUMBER OF ELEMENTS NEIGHBOURS OF A POINT IN 2D
!
      INTEGER, POINTER:: MXELVS2
!
!     MAXIMUM NUMBER OF ELEMENTS NEIGHBOURS OF A POINT IN 3D
!
      INTEGER, POINTER:: MXELVS3
!
!     VECTOR LENGTH OF THE MACHINE (LV2=LV3, FOR SIGMA MESH)
!
      INTEGER, POINTER:: LV
!
!-----------------------------------------------------------------------
! (11) CONSTANTS INITIALISED IN CSTKEP AND CREF_FREDSOE (FOR ZREF)
!-----------------------------------------------------------------------
!
!
!     FOR MONITORING K-EPSILON MODEL (SEE SUBROUTINE CSTKEP)
!
      DOUBLE PRECISION PERNORM2,PERPROD,RIMIN,RIMAX
!
!     VON KARMAN CONSTANT
!
      DOUBLE PRECISION :: KARMAN
!
!     K-EPSILON CONSTANT
!
      DOUBLE PRECISION :: CMU
!
!     K-EPSILON CONSTANTS
!
      DOUBLE PRECISION :: C1,C2,SIGMAK,SIGMAE,VIRT
!
!     SCHMIDT NUMBER
!
      DOUBLE PRECISION :: SCHMIT
!
!     MINIMUM K
!
      DOUBLE PRECISION :: KMIN
!
!     MAXIMUM K
!
      DOUBLE PRECISION :: KMAX
!
!     MINIMUM EPSILON
!
      DOUBLE PRECISION :: EMIN
!
!     MAXIMUM EPSILON
!
      DOUBLE PRECISION :: EMAX
!
!     PRANDTL NUMBER
!
      DOUBLE PRECISION :: PRANDTL
!
! CV 7.0
!    FOND FICTIF : DZ1/FICTIF
!
      DOUBLE PRECISION :: FICT
!
!     K-OMEGA MODEL CONSTANTS
!
      DOUBLE PRECISION :: ALPHA,BETA,BETAS,OMSTAR
!
!
!
      TYPE(BIEF_OBJ), TARGET :: ZREF
!
!-----------------------------------------------------------------------
!
!      12) TELEMAC-3D FILES
!
!-----------------------------------------------------------------------
!
!
!     MAXIMUM NUMBER OF FILES
!
      INTEGER, PARAMETER :: MAXLU_T3D = 49
!
!     DATA STRUCTURE WITH DATA ON FILES
!
      TYPE(BIEF_FILE) :: T3D_FILES(MAXLU_T3D)
!
      SAVE
!
      END MODULE DECLARATIONS_TELEMAC3D

